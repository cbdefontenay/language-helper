@* @using LanguageHelper.i18n *@
@* @using Microsoft.Extensions.Localization *@
@* @inject IJSRuntime JS *@
@* @inject IStringLocalizer<Translations> Trans *@
@* @inject NavigationManager Navigation *@
@* *@
@* <nav class="fixed top-0 left-0 w-full bg-gray-800 dark:bg-gray-900 text-white shadow-md z-50 h-14 flex items-center"> *@
@*     <div class="lg:hidden w-full flex justify-between p-4 relative z-60"> *@
@*         <!-- Hamburger Button (Visible on Android only) --> *@
@*         <button @onclick="ToggleMenu" class="block lg:hidden" aria-label="Toggle menu"> *@
@*             <!-- Hamburger icon --> *@
@*             <svg id="menu-icon" class="w-8 h-8 pb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" *@
@*                  xmlns="http://www.w3.org/2000/svg"> *@
@*                 <path id="menu-icon-path" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" *@
@*                       d="M4 6h16M4 12h16M4 18h16"></path> *@
@*             </svg> *@
@*         </button> *@
@*     </div> *@
@* *@
@*     <!-- Nav Items --> *@
@*     <div *@
@*         class="fixed inset-y-0 left-0 bg-white dark:bg-gray-900 transform -translate-x-full transition-transform duration-300 ease-in-out lg:relative lg:translate-x-0 lg:flex lg:w-auto lg:bg-transparent w-80 flex items-center justify-center" *@
@*         id="nav-menu"> *@
@*         <nav class="flex flex-col space-y-6 lg:flex-row lg:space-x-4 lg:space-y-0 lg:w-full lg:justify-start"> *@
@*             <NavLink href="/" *@
@*                      class="block py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-600 dark:hover:bg-gray-700 rounded"> *@
@*                 @Trans["HomeNav"] *@
@*             </NavLink> *@
@*             <NavLink href="/learn-page" *@
@*                      class="block py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-600 dark:hover:bg-gray-700 rounded"> *@
@*                 @Trans["LearnPage"] *@
@*             </NavLink> *@
@*         </nav> *@
@*     </div> *@
@* </nav> *@
@* *@
@* @code { *@
@*     private bool _isMenuOpen = false; *@
@* *@
@*     protected override void OnInitialized() *@
@*     { *@
@*         Navigation.LocationChanged += OnLocationChanged; *@
@*     } *@
@* *@
@*     private void OnLocationChanged(object sender, LocationChangedEventArgs e) *@
@*     { *@
@*         switch (_isMenuOpen) *@
@*         { *@
@*             case true: *@
@*                 _isMenuOpen = false; *@
@*                 JS.InvokeVoidAsync("toggleNavMenu", _isMenuOpen); *@
@*                 break; *@
@*         } *@
@*     } *@
@* *@
@*     private async Task ToggleMenu() *@
@*     { *@
@*         _isMenuOpen = !_isMenuOpen; *@
@*         await JS.InvokeVoidAsync("toggleNavMenu", _isMenuOpen); *@
@*     } *@
@* *@
@*     public void Dispose() *@
@*     { *@
@*         Navigation.LocationChanged -= OnLocationChanged; *@
@*     } *@
@* } *@

@using LanguageHelper.i18n
@using Microsoft.Extensions.Localization
@inject NavigationManager Navigation
@inject IStringLocalizer<Translations> Trans

<div class="fixed bottom-0 left-0 w-full bg-indigo-900 text-white shadow-lg z-50 h-16 flex justify-around items-center">
    @foreach (var item in _navItems)
    {
        <a href="javascript:void(0);" class="flex flex-col items-center py-2 text-slate-100 hover:text-indigo-300" @onclick="() => NavigateToPage(item.Route)">
            <img src="@item.SvgPath" alt="svg" class="w-6 h-6" />
            <span class="text-xs">@item.Name</span>
        </a>
    }
</div>

@code {
    private List<NavItem>? _navItems;

    protected override void OnInitialized()
    {
        _navItems =
        [
            new NavItem { Name = Trans["HomeNav"], Route = "/", SvgPath = "images/language.svg" },
            new NavItem { Name = Trans["LearnPage"], Route = "/learn-page", SvgPath = "images/learn.svg" },
            new NavItem { Name = Trans["SettingsNav"], Route = "/settings", SvgPath = "images/settings.svg" }
        ];
    }

    private class NavItem
    {
        public string? Name { get; set; }
        public string? Route { get; set; }
        public string? SvgPath { get; set; }
    }

    private void NavigateToPage(string? route)
    {
        if (Navigation.Uri != Navigation.ToAbsoluteUri(route).ToString())
        {
            Navigation.NavigateTo(route);
        }
    }
}