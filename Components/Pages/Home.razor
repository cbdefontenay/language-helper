@page "/"
@using LanguageHelper.Models
@inject FolderDbService DbService
@inject NavigationManager NavManager

<div class="flex flex-row justify-center items-center border-dashed border-2 border-sky-600 p-2 mx-auto mt-20 w-48 h-12 sm:hidden">
    <img src="images/folder.svg" alt="folder icon" class="mr-2 w-6 h-6"/>
    <button @onclick="OpenWindow"
            class="bg-transparent text-black text-sm">
        Create new List
    </button>
</div>

<div class="mt-6 px-4 space-y-4">
    @foreach (var folder in _folderNames)
    {
        <div @onclick="() => GoToDetails(folder.Id)"
             class="bg-white shadow-md rounded-lg p-4 flex items-center gap-4 cursor-pointer hover:bg-gray-100 transition-all duration-300">
            <img src="images/folder.svg" alt="folder icon" class="w-8 h-8"/>
            <span class="text-lg font-medium text-gray-900">@folder.Name</span>
        </div>
    }
</div>

@if (_isWindowOpen)
{
    <div class="fixed inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center p-4">
        <div class="bg-white p-8 rounded-xl shadow-lg w-full sm:w-96 max-w-lg">
            <h2 class="text-xl font-semibold mb-6 text-center">
                New Folder
            </h2>
            <input placeholder="Name of the folder" @bind="_newFolderName"
                   class="border border-gray-300 rounded-lg p-3 w-full mb-6 text-lg"/>
            <div class="flex justify-between">
                <button @onclick="CreateFolder"
                        class="bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-all duration-300">
                    Create
                </button>
                <button @onclick="OpenWindow"
                        class="bg-red-600 text-white px-6 py-3 rounded-lg hover:bg-red-700 transition-all duration-300">
                    Close
                </button>
            </div>
        </div>
    </div>
}

@code {
    readonly List<FolderItems> _folderNames = [];
    bool _isWindowOpen = false;
    string _newFolderName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _folderNames.AddRange(await DbService.GetFoldersAsync());
    }

    void OpenWindow()
    {
        _isWindowOpen = !_isWindowOpen;
    }

    private async void CreateFolder()
    {
        switch (string.IsNullOrEmpty(_newFolderName))
        {
            case false:
                await DbService.CreateFolderAsync(_newFolderName);
                _folderNames.Clear();
                _folderNames.AddRange(await DbService.GetFoldersAsync());

                _newFolderName = string.Empty;
                _isWindowOpen = false;
                break;
        }
    }

    private void GoToDetails(int folderId)
    {
        NavManager.NavigateTo($"/folder/{folderId}");
    }
}