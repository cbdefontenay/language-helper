@page "/"
@using LanguageHelper.Modals
@inject FolderDbService DbService
@inject NavigationManager NavManager
@inject IStringLocalizer<Translations> Trans

<div
    class="flex flex-row justify-center items-center border-dashed border-2 border-sky-600 p-2 mx-auto mt-20 w-80 px-6 py-6 h-16 sm:hidden rounded-lg">
    <svg class="w-8 h-8 text-slate-900 dark:text-white" viewBox="0 0 16 16" fill="currentColor"
         xmlns="http://www.w3.org/2000/svg">
        <path d="M0 1H5L8 3H13V5H3.7457L2.03141 11H4.11144L5.2543 7H16L14 14H0V1Z"/>
    </svg>
    <button @onclick="OpenWindow"
            class="bg-transparent text-sm ml-4 text-xl font-medium">
        @Trans["HomeCreateFolder"]
    </button>
</div>

<div class="mt-6 px-4 space-y-4">
    @foreach (var folder in _folderNames)
    {
        <div @onclick="() => GoToDetails(folder.Id)"
             class="bg-slate-200 dark:bg-slate-400 shadow-md rounded-lg p-4 flex items-center gap-4 cursor-pointer hover:bg-gray-100 transition-all duration-300">
            <svg class="w-8 h-8 mr-4 text-slate-900 dark:text-white" viewBox="0 0 16 16" fill="currentColor"
                 xmlns="http://www.w3.org/2000/svg">
                <path d="M0 1H5L8 3H13V5H3.7457L2.03141 11H4.11144L5.2543 7H16L14 14H0V1Z"/>
            </svg>

            <span class="text-xl font-medium">
                @folder.Name
            </span>
        </div>
    }
</div>

@if (_isWindowOpen)
{
    <div class="fixed inset-0 bg-opacity-50 backdrop-blur flex justify-center items-center p-4">
        <div class="bg-slate-300 dark:bg-slate-700 p-8 rounded-xl shadow-lg w-full sm:w-96 max-w-lg">
            <h2 class="text-xl font-semibold mb-6 text-center font-mono">
                @Trans["HomeCreateFolder"]
            </h2>
            <input placeholder="@Trans["HomeCreateFolderPopUpPlaceholder"]"
                   autofocus
                   @bind="_newFolderName"
                   class="border border-gray-300 dark:border-gray-200 rounded-lg p-3 w-full mb-2 text-lg"/>
            <span class="text-red-600 italic mb-6">
                @ErrorMessage
            </span>
            <div class="flex justify-between">
                <button @onclick="CreateFolder"
                        class="bg-indigo-500 dark:bg-indigo-800 px-6 py-3 rounded-lg hover:bg-indigo-700 transition-all duration-300">
                    @Trans["HomeCreateFolderPopUp"]
                </button>
                <button @onclick="OpenWindow"
                        class="bg-red-700 text-slate-100 px-6 py-3 rounded-lg transition-all duration-300">
                    @Trans["HomeCreateFolderPopUpClose"]
                </button>
            </div>
        </div>
    </div>
}

@code {
    readonly List<FolderItems> _folderNames = [];
    private string? ErrorMessage { get; set; } = string.Empty;
    bool _isWindowOpen;
    string _newFolderName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _folderNames.AddRange(await DbService.GetFoldersAsync());
    }

    void OpenWindow()
    {
        _isWindowOpen = !_isWindowOpen;
    }

    private async void CreateFolder()
    {
        switch (string.IsNullOrEmpty(_newFolderName))
        {
            case false:
                ErrorMessage = string.Empty;
                await DbService.CreateFolderAsync(_newFolderName);
                _folderNames.Clear();
                _folderNames.AddRange(await DbService.GetFoldersAsync());

                _newFolderName = string.Empty;
                _isWindowOpen = false;
                break;
            case true:
                ErrorMessage = Trans["NewFolderError"];
                break;
        }
    }

    private void GoToDetails(int folderId)
    {
        NavManager.NavigateTo($"/folder/{folderId}");
    }

}