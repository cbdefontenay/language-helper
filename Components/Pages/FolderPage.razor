@page "/folder/{FolderId:int}"
@layout GoBackTabLayout
@inject FolderDbService DbService

<h3 class="text-3xl font-semibold text-center mb-6">
    Vocabulary List
</h3>

<input @bind="_newWord" placeholder="Word" class="border border-gray-300 rounded-lg p-3 w-full mb-2" />
<input @bind="_newTranslation" placeholder="Translation" class="border border-gray-300 rounded-lg p-3 w-full mb-6" />

<button @onclick="CreateVocabulary"
        class="bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-600 transition-all duration-300">
    Add Vocabulary
</button>

<ul>
    @foreach (var vocab in _vocabulary)
    {
        <li>@vocab.Word => @vocab.Translation</li>
    }
</ul>

@code {
    [Parameter] public int FolderId { get; set; }
    private string? _newWord;
    private string? _newTranslation;
    private readonly List<VocabularyItems> _vocabulary = [];

    protected override async Task OnInitializedAsync()
    {
        _vocabulary.AddRange(await DbService.GetVocabularyForFolderAsync(FolderId));
    }

    private async void CreateVocabulary()
    {
        switch (string.IsNullOrEmpty(_newWord))
        {
            case false when !string.IsNullOrEmpty(_newTranslation):
                await DbService.CreateVocabularyAsync(FolderId, _newWord, _newTranslation);
                _vocabulary.Clear();
                _vocabulary.AddRange(await DbService.GetVocabularyForFolderAsync(FolderId));
                _newWord = string.Empty;
                _newTranslation = string.Empty;
                break;
        }
    }
}